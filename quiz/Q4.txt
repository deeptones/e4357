BEGIN
--------------------------------------------------------------------
Q1: Implement the following inline functions: 
inline int CircularBufferIsFull(CircularBuffer* que) {
	// If write pointer is pointing to last empty space, que is full
	if  ( (((que->writePointer) + 1) & (que->mask)) == que->readPointer) {
		return 1;
	}
	return 0;
}


inline int CircularBufferIsEmpty(CircularBuffer* que) {
	// If write pointer and read pointer point to same space, que is empty.
	if (que->writePointer == que->readPointer) {
		return 1;
	}
	return 0;
}

This was done as homework 6 but reproduced above.




--------------------------------------------------------------------
Q2: How to compute "Interrupt Latency"?
	Interrupt latency is the time between issuing an interrupt command
	and responding to the interrupt by beginnign execution of the 
	associated ISR.

	In our text "Fast and Effective Embedded Systems Design" latency 
	is measured as the time difference between an applied rising edge
	on an interrupt signal and an LED output that is part of the ISR.


--------------------------------------------------------------------
Q3: Serial pc(USBTX, USBRX); // tx, rx 
    What API (function) do you use to change the baud rate?
    pc.baud
    (for instance pc.baud(9600) sets the serial port's baud rate to 9600 b/s.)




--------------------------------------------------------------------
Q4: How many bit(s) does TDO have? Is TDO an input or output type? (Ref: JTAG Pins) 
	TDO is the single bit output from the JTAG standard.


--------------------------------------------------------------------
Q5:
What is the address of ledArr[0]? 
	ledArr[0] is the first element of ledArr[] which is to say 
	DigitalOut(LED1).  This has an address of port 1 byte 2 bit 18
	and it is the third bit 
	of the address:  0x2009C036 // bits 16-23 of port 1.

What is the address of ch? 
	ch is a declared int variable and its address can be referred to as:
	&ch


/* 
* Enter a hex number [0-9a-fA-F]; Decode it in 4-bit binary format and display them on 4 on board leds. 
*/ 

#include "mbed.h" 

Serial pc(USBTX, USBRX); // tx, rx 
DigitalOut ledArr[4] = {DigitalOut(LED1), DigitalOut(LED2), DigitalOut(LED3), DigitalOut(LED4)}; 
void DisplayLed(int ch) 
{ 
	int i=0;

	if (ch>='0' && ch<='9')
		ch-='0';
	else if (ch>='A' && ch<='F') {
		ch-='A';
		ch+=10;
	} else if (ch>='a' && ch<='f') {
		ch-='a';
		ch+=10;
	} else
		ch=0;

	for (i=0; i<4; i++) { 
		if(ch& (1<<i))
			ledArr[i] = 1; 
		else
			ledArr[i] = 0;
	} 
} 

int main(void) { 
	int ch; 
	pc.baud(9600); 
	pc.printf("\r\nHello World!"); 
	while(1) { 
		pc.printf("\r\nEnter:"); 
		ch = pc.getc(); 
		pc.putc(ch); 
		DisplayLed(ch); 
	} 
}
